{
    "summary": "The AccessibilityUtil class provides accessibility-related methods, including checkSetting for system settings and acquires wake locks and screen unlocks for 60 seconds.",
    "details": [
        {
            "comment": "This code is a part of the AccessibilityUtil class that provides methods related to accessibility and assistive technology. The checkSetting method checks if the system settings are open and displays a dialog box with a message. If the user clicks \"yes\" in the dialog, it calls jumpToSetting to navigate the user to the settings page for further configuration.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_android_doc/src/app/src/main/java/ai/lazero/lazero/AccessibilityUtil.java\":0-33",
            "content": "package ai.lazero.lazero;\nimport android.app.AlertDialog;\nimport android.app.KeyguardManager;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.PowerManager;\nimport android.provider.Settings;\nimport android.text.TextUtils;\nimport android.util.Log;\n/**\n * \u8f85\u52a9\u529f\u80fd/\u65e0\u969c\u788d\u76f8\u5173\u5de5\u5177\n */\npublic class AccessibilityUtil {\n    private static final String TAG = AccessibilityUtil.class.getSimpleName();\n    /**\n     * \u68c0\u67e5\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u5e76\u663e\u793a\u8bbe\u7f6e\u5bf9\u8bdd\u6846\n     *\n     * @param service \u8f85\u52a9\u670d\u52a1\n     */\n    public static void checkSetting(final Context cxt, Class service) {\n        if (isSettingOpen(service, cxt))\n            return;\n        new AlertDialog.Builder(cxt)\n                .setTitle(R.string.aby_setting_title)\n                .setMessage(R.string.aby_setting_msg)\n                .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        jumpToSetting(cxt);"
        },
        {
            "comment": "Checks if accessibility service is enabled in system settings and returns the status.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_android_doc/src/app/src/main/java/ai/lazero/lazero/AccessibilityUtil.java\":34-58",
            "content": "                    }\n                })\n                .show();\n    }\n// get how it was applied.\n    // get another return thing.\n//    android:scrollbars = \"vertical\"\n    /**\n     * \u68c0\u67e5\u7cfb\u7edf\u8bbe\u7f6e\uff1a\u662f\u5426\u5f00\u542f\u8f85\u52a9\u670d\u52a1\n     *\n     * @param service \u8f85\u52a9\u670d\u52a1\n     */\n    public static boolean isSettingOpen(Class service, Context cxt) {\n        try {\n            int enable = Settings.Secure.getInt(cxt.getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED, 0);\n            if (enable != 1)\n                return false;\n            String services = Settings.Secure.getString(cxt.getContentResolver(), Settings.Secure.ENABLED_ACCESSIBILITY_SERVICES);\n            if (!TextUtils.isEmpty(services)) {\n                TextUtils.SimpleStringSplitter split = new TextUtils.SimpleStringSplitter(':');\n                split.setString(services);\n                while (split.hasNext()) { // \u904d\u5386\u6240\u6709\u5df2\u5f00\u542f\u7684\u8f85\u52a9\u670d\u52a1\u540d\n                    if (split.next().equalsIgnoreCase(cxt.getPackageName() + \"/\" + service.getName()))\n                        return true;\n                }"
        },
        {
            "comment": "This code provides methods for accessing and modifying system settings related to accessibility, as well as waking up and unlocking the screen. It also includes error handling for cases where device manufacturers have altered the default settings, requiring custom adaptation.",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_android_doc/src/app/src/main/java/ai/lazero/lazero/AccessibilityUtil.java\":59-90",
            "content": "            }\n        } catch (Throwable e) {//\u82e5\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u8bf4\u660e\u8be5\u624b\u673a\u8bbe\u7f6e\u88ab\u5382\u5546\u7be1\u6539\u4e86,\u9700\u8981\u9002\u914d\n            Log.e(TAG, \"isSettingOpen: \" + e.getMessage());\n        }\n        return false;\n    }\n// fuck.\n    /**\n     * \u8df3\u8f6c\u5230\u7cfb\u7edf\u8bbe\u7f6e\uff1a\u5f00\u542f\u8f85\u52a9\u670d\u52a1\n     */\n    public static void jumpToSetting(final Context cxt) {\n        try {\n            cxt.startActivity(new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS));\n        } catch (Throwable e) {//\u82e5\u51fa\u73b0\u5f02\u5e38\uff0c\u5219\u8bf4\u660e\u8be5\u624b\u673a\u8bbe\u7f6e\u88ab\u5382\u5546\u7be1\u6539\u4e86,\u9700\u8981\u9002\u914d\n            try {\n                Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                cxt.startActivity(intent);\n            } catch (Throwable e2) {\n                Log.e(TAG, \"jumpToSetting: \" + e2.getMessage());\n            }\n        }\n    }\n    /**\n     * \u5524\u9192\u70b9\u4eae\u548c\u89e3\u9501\u5c4f\u5e55(60s)\n     */\n    public static void wakeUpScreen(Context context) {\n        try {\n            //\u5524\u9192\u70b9\u4eae\u5c4f\u5e55\n            PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);\n            if (pm != null && pm.isScreenOn()) {"
        },
        {
            "comment": "This code acquires a wake lock and unlocks the screen for 60 seconds. It first creates a wake lock with ACQUIRE_CAUSES_WAKEUP and SCREEN_DIM_WAKE_LOCK flags, then acquires it for 60 seconds. Next, it checks if in KeyguardRestrictedInputMode, and if so, disables the keyguard using a KeyguardLock. Any Throwable exceptions are logged with Log.e().",
            "location": "\"/media/root/Prima/works/generated_docs/lazero_android_doc/src/app/src/main/java/ai/lazero/lazero/AccessibilityUtil.java\":91-105",
            "content": "                PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_DIM_WAKE_LOCK, \"wakeUpScreen\");\n                wl.acquire(60000); // 60s\u540e\u91ca\u653e\u9501\n            }\n            //\u89e3\u9501\u5c4f\u5e55\n            KeyguardManager km = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);\n            if (km != null && km.inKeyguardRestrictedInputMode()) {\n                KeyguardManager.KeyguardLock kl = km.newKeyguardLock(\"unLock\");\n                kl.disableKeyguard();\n            }\n        } catch (Throwable e) {\n            Log.e(TAG, \"wakeUpScreen: \" + e.getMessage());\n        }\n    }\n}"
        }
    ]
}